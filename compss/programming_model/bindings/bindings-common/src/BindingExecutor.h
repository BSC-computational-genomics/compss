/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "AbstractExecutor.h"
/* Header for class es_bsc_compss_nio_worker_executors_PersistentExternalExecutor */

#ifndef _BindingExecutor
#define _BindingExecutor

void init_executor(AbstractExecutor *aExecutor);

#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     es_bsc_compss_nio_worker_executors_PersistentExternalExecutor
 * Method:    executeInBinding
 * Signature: (I[Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_es_bsc_compss_nio_worker_executors_PersistentExternalExecutor_executeInBinding
 // (JNIEnv *, jclass, jint, jobjectArray);
	(JNIEnv *, jclass, jstring);

/*
 * Class:     es_bsc_compss_nio_worker_executors_PersistentExternalExecutor
 * Method:    finishThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_es_bsc_compss_nio_worker_executors_PersistentExternalExecutor_finishThread
  (JNIEnv *, jclass);

/*
 * Class:     es_bsc_compss_nio_worker_executors_PersistentExternalExecutor
 * Method:    initThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_es_bsc_compss_nio_worker_executors_PersistentExternalExecutor_initThread
  (JNIEnv *, jclass);
#ifdef __cplusplus
}
#endif
#endif
