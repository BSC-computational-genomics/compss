#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retryNum=$7
  pythonInterpreter=$8

  # Global exit variable
  exitValue=0

  #----------------------------------------------------------------------------------
  # Generate Project.xml according to system
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project.xml

  #----------------------------------------------------------------------------------
  # Create all working dir folders
  mkdir -p /tmp/COMPSsWorker01/

  #----------------------------------------------------------------------------------
  # Set environment variables
  export ComputingUnits="1"

  #----------------------------------------------------------------------------------
  # Run application 1 - Test
  echo
  echo "*** RUNNING GEMM AUTOPARALLEL TEST"
  output_log="${target_log_folder}/gemm_autoparallel_0${retryNum}.outputlog"
  error_log="${target_log_folder}/gemml_autoparallel_0${retryNum}.errorlog"
  expectedTime=360s

  if [ "$pythonInterpreter" == "python2" ]; then
    msize=4
    # shellcheck disable=SC2086
    timeout --signal=2 $expectedTime "${COMPSs_exec}" \
       --project="${base_app_dir}"/project.xml \
       --resources="${base_app_dir}"/resources.xml \
       \
       --comm="$comm" \
       \
       --debug \
       ${runcompss_opts} \
       \
       --lang=python \
       --python_interpreter="$pythonInterpreter" \
       --pythonpath="${base_app_dir}"/src \
       \
       "${base_app_dir}"/src/gemm_autoparallel.py $msize > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)

    # Take the latest log folder as retry number
    # Fixes the possiblity to test with both python 2 and 3 one after the other
    retryNum=$(find "${COMPSs_log_folder}" -name gemm_autoparallel.py* -type d | wc -l)

    # Check timeout
    if [[ "$?" = "124" ]]; then
       # Copy LOG files
       cp -rf "${COMPSs_log_folder}"/gemm_autoparallel.py_0"${retryNum}"/* "${target_log_folder}"

       # Report timeout
       echo "[WARNING] Python Application timed out" >> "${output_log}"
       exitValue=124
    else
       # Copy LOG files
       cp -rf "${COMPSs_log_folder}"/gemm_autoparallel.py_0"${retryNum}"/* "${target_log_folder}"

       # Check result
       "${base_app_dir}"/result "${output_log}" "${error_log}" "${target_log_folder}"
       exitValue=$?
    fi

    #----------------------------------------------------------------------------------
    # Return execution status
    exit $exitValue
  else
    echo "[WARN] AutoParallel module only works for Python 2"
    #----------------------------------------------------------------------------------
    # Return execution status
    exit 99
  fi
